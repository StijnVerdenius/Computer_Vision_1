close all
clear all
clc
 
disp('Part 1: Photometric Stereo')

% obtain many images in a fixed view under different illumination
disp('Loading images...')
image_dir_5 = './photometrics_images/SphereGray5/';   % TODO: get the path of the script
image_dir_25 = './photometrics_images/SphereGray25/';   % TODO: get the path of the script

%image_ext = '*.png';
% 5 Images
[image_stack5, scriptV5] = load_syn_images(image_dir_5);
[h5, w5, n5] = size(image_stack5);
fprintf('Finish loading %d images.\n\n', n5);

% compute the surface gradient from the stack of imgs and light source mat
disp('Computing surface albedo and normal map...')
[albedo5, normals5] = estimate_alb_nrm(image_stack5, scriptV5, false);
[albedo5_trick, normals5_trick] = estimate_alb_nrm(image_stack5, scriptV5);

% 25 Images
[image_stack25, scriptV25] = load_syn_images(image_dir_25);
[h25, w25, n25] = size(image_stack25);
fprintf('Finish loading %d images.\n\n', n25);

% compute the surface gradient from the stack of imgs and light source mat
disp('Computing surface albedo and normal map...')
[albedo25, normals25] = estimate_alb_nrm(image_stack25, scriptV25, false);
[albedo25_trick, normals25_trick] = estimate_alb_nrm(image_stack25, scriptV25);

figure(1)
subplot(2,2,1);
imshow(albedo5);
title("Albedo 5 no trick")
subplot(2,2,2);
imshow(albedo25);
title("Albedo 25 no trick")
subplot(2,2,3);
imshow(albedo5_trick);
title("Albedo 5 with trick")
subplot(2,2,4);
imshow(albedo25_trick);
title("Albedo 25 with trick")
%% 

figure(2)
i = 0;
for num_images=(5:5:25)
    
    [image_stack_i, scriptV_i] = load_syn_images(image_dir_25, num_images);
    [albedo_i, normals_i] = estimate_alb_nrm(image_stack_i, scriptV_i);
    
    i = i + 1;
    subplot(1, 5, i)
    imshow(albedo_i)
    title(num_images)
end

%% integrability check: is (dp / dy  -  dq / dx) ^ 2 small everywhere?
disp('Integrability checking')
[p, q, SE] = check_integrability(normals25);

threshold = 0.005;
SE(SE <= threshold) = NaN; % for good visualization
imshow(SE);
display(size(SE))
fprintf('Number of outliers: %d\n\n', sum(sum(SE > threshold)));

%% compute the surface height
height_map = construct_surface( p, q, "average");
imshow(height_map)
%% Display
show_model(albedo25, height_map);
%
%% Face
[image_stack, scriptV] = load_face_images('./photometrics_images/monkeygray/');
[h, w, n] = size(image_stack);
fprintf('Finish loading %d images.\n\n', n);
disp('Computing surface albedo and normal map...')
[albedo, normals] = estimate_alb_nrm(image_stack, scriptV);

%% integrability check: is (dp / dy  -  dq / dx) ^ 2 small everywhere?
disp('Integrability checking')
[p, q, SE] = check_integrability(normals);

threshold = 0.005;
SE(SE <= threshold) = NaN; % for good visualization
fprintf('Number of outliers: %d\n\n', sum(sum(SE > threshold)));

%% compute the surface height
height_map = construct_surface( p, q );

%show_results(albedo, normals, SE);
show_model(albedo, height_map);

